version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project
commands:
  destroy_environement:
      steps:
        - run:
            name: Destroy environment
            ## if any step in the job that calls the command fails 
            when: on_fail
            command: aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}
jobs:
  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-east-1
        - run:
            name: prepare inventory file
            command: |
              echo "[all]" > inventory
        - run:
            name: add ip to inventory file
            command: |
              aws ec2 describe-instances \
                --query 'Reservations[*].Instances[*].PublicIpAddress' \
                --output text >> inventory
        - run:
            name: install tar to use workspace
            command: "yum install -y tar gzip"
        - persist_to_workspace:
            root: .
            paths:
              - inventory

  configure_infrastructure: 
      docker:
        - image: python:3.7-alpine3.11
      steps:
        - checkout
        - attach_workspace:
            at: .
        - run:
            name: print invetory output
            command: "cat inventory"
        - add_ssh_keys:
                # You can get this ID in the section where you registered the SSH Key
                fingerprints: ["e4:b3:42:fd:84:3d:56:c0:54:8f:e8:70:36:dd:68:12"] 
        - run:
            name: Install Ansible
            command: |
               apk add --update ansible
        - run:
            name: Run Playbook and Configure server
            command: |
               ansible-playbook -i inventory main-remote.yml
  smoke_test:
      docker:
        - image: alpine:latest
      steps:
        - checkout
        - run:
            name: install curl
            command: "apk add --update curl"
        - run:
            name: install aws
            command: |        
              apk add --no-cache \
              python3 \
              py3-pip \
              && pip3 install --upgrade pip \
              && pip3 install --no-cache-dir \
              awscli \
              && rm -rf /var/cache/apk/*
        - run: 
            name: chek aws
            command: aws --version 
        - run:
            name: test webiste
            command: |
              URL="https://blog.udacityyyy.com/"
              if curl -s --head ${URL}
              then 
                return 0      
              else 
                return 1 
              fi
        - destroy_environement
          
# Sequential workflow
workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      - create_infrastructure
      #- configure_infrastructure:
      #    requires: 
      #      - create_infrastructure
      - smoke_test
